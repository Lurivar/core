<?php
/**********************************************************************************/
/*                                                                                */
/*      Thelia	                                                                  */
/*                                                                                */
/*      Copyright (c) OpenStudio                                                  */
/*      email : info@thelia.net                                                   */
/*      web : http://www.thelia.net                                               */
/*                                                                                */
/*      This program is free software; you can redistribute it and/or modify      */
/*      it under the terms of the GNU General Public License as published by      */
/*      the Free Software Foundation; either version 3 of the License             */
/*                                                                                */
/*      This program is distributed in the hope that it will be useful,           */
/*      but WITHOUT ANY WARRANTY; without even the implied warranty of            */
/*      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             */
/*      GNU General Public License for more details.                              */
/*                                                                                */
/*      You should have received a copy of the GNU General Public License         */
/*	    along with this program. If not, see <http://www.gnu.org/licenses/>.      */
/*                                                                                */
/**********************************************************************************/

namespace Thelia\Coupon\Type;

/**
 * Created by JetBrains PhpStorm.
 * Date: 8/19/13
 * Time: 3:24 PM
 *
 * Unit Test CouponAbstract Class
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-17 at 18:59:24.
 *
 * @package Coupon
 * @author  Guillaume MOREL <gmorel@openstudio.fr>
 *
 */
class CouponAbstractTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var CouponAbstract
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
//        $this->object = new CouponAbstract();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::setOrganizer
     * @todo   Implement testSetOrganizer().
     */
    public function testSetOrganizer()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::getCode
     * @todo   Implement testGetCode().
     */
    public function testGetCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::getTitle
     * @todo   Implement testGetTitle().
     */
    public function testGetTitle()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::getShortDescription
     * @todo   Implement testGetShortDescription().
     */
    public function testGetShortDescription()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::getDescription
     * @todo   Implement testGetDescription().
     */
    public function testGetDescription()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::isCumulative
     * @todo   Implement testIsCumulative().
     */
    public function testIsCumulative()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::isRemovingPostage
     * @todo   Implement testIsRemovingPostage().
     */
    public function testIsRemovingPostage()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::exec
     * @todo   Implement testExec().
     */
    public function testExec()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::getConditions
     * @todo   Implement testGetConditions().
     */
    public function testGetConditions()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::setConditions
     * @todo   Implement testSetConditions().
     */
    public function testSetConditions()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::getExpirationDate
     * @todo   Implement testGetExpirationDate().
     */
    public function testGetExpirationDate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::isAvailableOnSpecialOffers
     * @todo   Implement testIsAvailableOnSpecialOffers().
     */
    public function testIsAvailableOnSpecialOffers()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::isEnabled
     * @todo   Implement testIsEnabled().
     */
    public function testIsEnabled()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::getMaxUsage
     * @todo   Implement testGetMaxUsage().
     */
    public function testGetMaxUsage()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::isExpired
     * @todo   Implement testIsExpired().
     */
    public function testIsExpired()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::getServiceId
     * @todo   Implement testGetServiceId().
     */
    public function testGetServiceId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Thelia\Coupon\Type\CouponAbstract::isMatching
     * @todo   Implement testIsMatching().
     */
    public function testIsMatching()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
