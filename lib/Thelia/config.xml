<?xml version="1.0" encoding="UTF-8" ?>

<config xmlns="http://thelia.net/schema/dic/config"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://thelia.net/schema/dic/config http://thelia.net/schema/dic/config/thelia-1.0.xsd">

    <testLoops>
        <testLoop name="equal" class="Test\TestLoop\Equal"/>
    </testLoops>

    <loops>
        <loop name="foo" class="Foo\Bar"/>
        <loop name="fooz" class="Foo\Barz"/>
    </loops>
    <parameters>
        <parameter key="router.request_context.class">Symfony\Component\Routing\RequestContext</parameter>
        <parameter key="router.null_generator.class">Thelia\Routing\NullUrlGenerator</parameter>
        <parameter key="router.dynamicRouter.class">Symfony\Cmf\Component\Routing\DynamicRouter</parameter>
        <parameter key="router.chainRouter.class">Symfony\Cmf\Component\Routing\ChainRouter</parameter>
    </parameters>
    <services>
        <service id="event_dispatcher" class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher">
            <argument type="service" id="service_container" />
        </service>

        <service id="thelia.listener.view" class="Thelia\Core\EventListener\ViewListener">
            <tag name="kernel.event_subscriber"/>
            <argument type="service" id="service_container"/>
        </service>

        <service id="controller.default" class="Thelia\Controller\DefaultController"/>

        <service id="matcher.default" class="Thelia\Routing\Matcher\DefaultMatcher">
            <argument type="service" id="controller.default"/>
        </service>

        <service id="request.context" class="%router.request_context.class%" />

        <service id="router.null_generator" class="%router.null_generator.class%"/>

        <service id="router.default_route" class="%router.dynamicRouter.class%">
            <argument type="service" id="request.context"/>
            <argument type="service" id="matcher.default"/>
            <argument type="service" id="router.null_generator"/>
        </service>

        <service id="router.chainRequest" class="%router.chainRouter.class%">
            <call method="setContext">
                <argument type="service" id="request.context"/>
            </call>
            <call method="add">
                <argument type="service" id="router.default_route"/>
                <argument>-255</argument>
            </call>
        </service>

        <service id="listener.router" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
            <tag name="kernel.event_subscriber"/>
            <argument type="service" id="router.chainRequest"/>
        </service>

        <service id="thelia.request_listener" class="Thelia\Core\EventListener\RequestListener">
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="thelia.action.cart" class="Thelia\Action\Cart">
            <tag name="kernel.event_subscriber"/>
        </service>
        <service id="thelia.action.customer" class="Thelia\Action\Customer">
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="controller_resolver" class="Symfony\Component\HttpKernel\Controller\ControllerResolver"/>

        <service id="parser" class="Thelia\Core\Template\Parser">
            <argument type="service" id="service_container"/>
        </service>

        <service id="http_kernel" class="Thelia\Core\TheliaHttpKernel">
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="service_container" />
            <argument type="service" id="controller_resolver" />
        </service>

        <service id="template" class="Thelia\Tpex\Tpex" scope="request">
            <argument type="service" id="request" />
            <argument type="service" id="event_dispatcher"/>
            <call method="setLoop">
                <argument>%tpex.loop%</argument>
            </call>
            <call method="setFilter">
                <argument>%tpex.filter%</argument>
            </call>
            <call method="setBaseParams">
                <argument>%tpex.baseParam%</argument>
            </call>
            <call method="setTestLoop">
                <argument>%tpex.testLoop%</argument>
            </call>
        </service>

        <service id="request" scope="request" synthetic="true" />

        <service id="service_container" synthetic="true" />

        <service id="kernel" synthetic="true" />
    </services>

</config>